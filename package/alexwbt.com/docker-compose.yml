version: "3"
services:
  # Nginx HTTP
  nginx_http:
    restart: always
    image: nginx:1.25.4-alpine
    container_name: nginx_http
    ports:
      - 80:80
    volumes:
      - ${WORK_DIR}/config/nginx_http/conf/:/etc/nginx/conf.d/:ro
      - ${WORK_DIR}/runtime/certbot/www:/var/www/certbot/:ro

  # Nginx
  nginx:
    restart: always
    image: nginx:1.25.4-alpine
    container_name: nginx
    ports:
      - 443:443
      - 3306:3306
    volumes:
      - ${WORK_DIR}/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${WORK_DIR}/runtime/certbot/conf/:/etc/nginx/ssl/:ro

  # Certbot
  certbot:
    image: certbot/certbot:v2.9.0
    container_name: certbot
    volumes:
      - ${WORK_DIR}/runtime/certbot/www/:/var/www/certbot/:rw
      - ${WORK_DIR}/runtime/certbot/conf/:/etc/letsencrypt/:rw

  # alexwbt
  alexwbt:
    restart: always
    image: alexwbt:latest
    container_name: alexwbt
    volumes:
      - "${WORK_DIR}/config/alexwbt/config.js:/app/public/config.js:ro"

  # alexwbt-api
  alexwbt-api:
    restart: always
    image: alexwbt-api:latest
    container_name: alexwbt-api
    environment:
      DATABASE_URL: ${ALEXWBT_API_DATABASE_URL}

  # MySql
  mysql:
    restart: always
    image: mysql:8.3.0
    container_name: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  # Keycloak
  # keycloak:
  #   restart: always
  #   image: quay.io/keycloak/keycloak:24.0.1
  #   container_name: keycloak

  #   environment:
  #     KC_DB: mysql
  #     KC_DB_URL: jdbc:mysql://alexwbt.com:3306/keycloak
  #     KC_DB_USERNAME: keycloak
  #     KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}

  #   entrypoint: /opt/keycloak/bin/kc.sh start --proxy edge


volumes:
  mysql-data:
